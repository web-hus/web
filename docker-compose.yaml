
services:
  backend:
    env_file:
      - .env
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ELASTICSEARCH_URL: http://elasticsearch:9200
      REDIS_HOST: redis
      REDIS_PORT: 6379
      EMAIL_SENDER: ${EMAIL_SENDER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
      DEBUG: ${DEBUG}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000" # Expose the React app on port 3000
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://backend:8000 # URL for backend API

  db:
    env_file:
      - .env
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
    - db_data:/var/lib/postgresql/data
    - ./backend/database:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"

volumes:
  db_data:
